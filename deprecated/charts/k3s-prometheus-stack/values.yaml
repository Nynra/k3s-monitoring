global:
  commonLabels: {}
  commonAnnotations: {}

enabled: true

# This chart does not use the ingress provided by the kube-prometheus-stack chart.
# Instead the ingress and certs are provided in the templates of this chart.
grafanaIngress:
  enabled: false
  ingressUrl: "grafana.example.com"

  certName: "grafana-example-com-tls"
  externalCert:
    enabled: false
    secretName: "grafana-example-com-tls"
    secretStore: "kubernetes"
    secretStoreType: "ClusterSecretStore"

kube-prometheus-stack:
  enabled: true
  grafana:
    # Grafana is a dependancy of the kube-prometheus-stack chart, so we can configure it here
    # and all values will be directed towards the grafana chart.
    enabled: false
    defaultDashboardsEnabled: true
    defaultDashboardsTimezone: utc
    defaultDashboardsInterval: 1m
    
    # # To make Grafana persistent (Using Statefulset)
    # persistence:
    #   enabled: true
    #   type: sts
    #   storageClassName: "storageClassName"
    #   accessModes:
    #     - ReadWriteOnce
    #   size: 20Gi
    #   finalizers:
    #     - kubernetes.io/pvc-protection
    operator: 
      ## Enable references to ConfigMaps containing dashboards in GrafanaDashboard CRs
      ## Set to true to allow dashboards to be loaded from ConfigMap references
      dashboardsConfigMapRefEnabled: false

      ## Labels that should be matched kind: Grafana instance
      matchLabels: { category: dashboard }

      ## Which folder all dashboards in Grafana General means on Root level
      folder: "default"

      ## How frequently the operator should resync resources (in duration format)
      ## Controls how often dashboards are reconciled by the operator
      ##
      resyncPeriod: 10m
  
  prometheus: 
    prometheusSpec:
      ## Statefulset's persistent volume claim retention policy
      ## whenDeleted and whenScaled determine whether
      ## statefulset's PVCs are deleted (true) or retained (false)
      ## on scaling down and deleting statefulset, respectively.
      ## Requires Kubernetes version 1.27.0+.
      ## Ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#persistentvolumeclaim-retention
      persistentVolumeClaimRetentionPolicy: {}

      ## Interval between consecutive scrapes.
      ## Defaults to 30s.
      ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/release-0.44/pkg/prometheus/promcfg.go#L180-L183
      scrapeInterval: "30s"

      ## Number of seconds to wait for target to respond before erroring
      scrapeTimeout: ""

      ## EnableAdminAPI enables Prometheus the administrative HTTP API which includes functionality such as deleting time series.
      ## This is disabled by default.
      ## ref: https://prometheus.io/docs/prometheus/latest/querying/api/#tsdb-admin-apis
      enableAdminAPI: false

      ## Prometheus StorageSpec for persistent data
      ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/platform/storage.md
      storageSpec: {}
      ## Using PersistentVolumeClaim
      #  volumeClaimTemplate:
      #    spec:
      #      storageClassName: gluster
      #      accessModes: ["ReadWriteOnce"]
      #      resources:
      #        requests:
      #          storage: 50Gi
      #      selector: {}